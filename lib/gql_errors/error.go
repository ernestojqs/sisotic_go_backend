package gqlErrors

import "github.com/pjmd89/gogql/lib/gql/definitionError"

var (
	ERROR_EMPTY_OR_INVALID_ID                     = definitionError.ErrorDescriptor{Code: "001", Message: "Empty or invalid input id", Level: definitionError.LEVEL_FATAL}
	ERROR_INVALID_PHONE_NUMBER                    = definitionError.ErrorDescriptor{Code: "002", Message: "Empty or invalid phone number format", Level: definitionError.LEVEL_FATAL}
	ERROR_INVALID_EMAIL                           = definitionError.ErrorDescriptor{Code: "003", Message: "Empty or invalid email format", Level: definitionError.LEVEL_FATAL}
	ERROR_PASSWORD_MINIMUM_CHARACTERS             = definitionError.ErrorDescriptor{Code: "004", Message: "The password must be a minimum of 8 characters", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_JOB_TITLE_IN_DB                   = definitionError.ErrorDescriptor{Code: "005", Message: "Job title not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_JOB_AREA_IN_DB                    = definitionError.ErrorDescriptor{Code: "005", Message: "Job area not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_JOB_TITLE_IS_REQUERIDED                 = definitionError.ErrorDescriptor{Code: "006", Message: "The user must have a job title related to him", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_USER_IN_DB                       = definitionError.ErrorDescriptor{Code: "007", Message: "Error when trying to create user in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_USER_IN_DB                       = definitionError.ErrorDescriptor{Code: "008", Message: "Error when trying to update user in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_USER_IN_DB                        = definitionError.ErrorDescriptor{Code: "009", Message: "User not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_SETTING_IN_DB                    = definitionError.ErrorDescriptor{Code: "010", Message: "Error when trying to update setting in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_SETTING_IN_DB                     = definitionError.ErrorDescriptor{Code: "011", Message: "Setting not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_NOTIFICATION_TIME_INTERVAL_IS_ZERO      = definitionError.ErrorDescriptor{Code: "012", Message: "The notification time interval cannot be less than or equal to 0", Level: definitionError.LEVEL_FATAL}
	ERROR_USER_NOT_LOGGED                         = definitionError.ErrorDescriptor{Code: "013", Message: "USER NOT LOGGED IN", Level: definitionError.LEVEL_FATAL}
	ERROR_ACCESS_DENIED                           = definitionError.ErrorDescriptor{Code: "014", Message: "Acces denied", Level: definitionError.LEVEL_FATAL}
	ERROR_NOTIFICATION_SETTING_INCONSISTENCY      = definitionError.ErrorDescriptor{Code: "015", Message: "If notifications are not enabled, other values related to notification settings cannot be set", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_SETTING_IN_DB                    = definitionError.ErrorDescriptor{Code: "016", Message: "Error when trying to delete setting in database", Level: definitionError.LEVEL_FATAL}
	ERROR_INVALID_TIME_ZONE                       = definitionError.ErrorDescriptor{Code: "017", Message: "Invalid time zone", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_JOB_TITLE_IN_DB                  = definitionError.ErrorDescriptor{Code: "018", Message: "Error when trying to create job title in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_JOB_TITLE_IN_DB                  = definitionError.ErrorDescriptor{Code: "019", Message: "Error when trying to update job title in database", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_JOB_TITLE_IN_DB                  = definitionError.ErrorDescriptor{Code: "020", Message: "Error when trying to delete job title in database", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_JOB_AREA_IN_DB                   = definitionError.ErrorDescriptor{Code: "018", Message: "Error when trying to create job area in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_JOB_AREA_IN_DB                   = definitionError.ErrorDescriptor{Code: "019", Message: "Error when trying to update job area in database", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_JOB_AREA_IN_DB                   = definitionError.ErrorDescriptor{Code: "020", Message: "Error when trying to delete job area in database", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_COLLEGE_DEPENDENCY_IN_DB         = definitionError.ErrorDescriptor{Code: "018", Message: "Error when trying to create college dependecy in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_COLLEGE_DEPENDENCY_IN_DB         = definitionError.ErrorDescriptor{Code: "019", Message: "Error when trying to update college dependecy in database", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_COLLEGE_DEPENDENCY_IN_DB         = definitionError.ErrorDescriptor{Code: "020", Message: "Error when trying to delete college dependecy in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_COLLEGE_DEPENDENCY_IN_DB          = definitionError.ErrorDescriptor{Code: "005", Message: "College dependency not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_DOSE_IN_DB                       = definitionError.ErrorDescriptor{Code: "021", Message: "Error when trying to update dose in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_DOSE_IN_DB                        = definitionError.ErrorDescriptor{Code: "022", Message: "Dose not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_VACCINATION_DAY_IS_ZERO                 = definitionError.ErrorDescriptor{Code: "023", Message: "The value of a vaccination day cannot be 0", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_VACCINATION_SCHEME_IN_DB         = definitionError.ErrorDescriptor{Code: "024", Message: "Error when trying to create vaccination scheme in database", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_DOSE_IN_DB                       = definitionError.ErrorDescriptor{Code: "025", Message: "Error when trying to create dose in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_VACCINATION_SCHEME_IN_DB          = definitionError.ErrorDescriptor{Code: "026", Message: "Vaccination scheme not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_VACCINATION_SCHEME_IN_DB         = definitionError.ErrorDescriptor{Code: "027", Message: "Error when trying to update vaccination scheme in database", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_VACCINATION_SCHEME_IN_DB         = definitionError.ErrorDescriptor{Code: "028", Message: "Error when trying to delete vaccination scheme in database", Level: definitionError.LEVEL_FATAL}
	ERROR_INVALID_REFERENCE_VALUE                 = definitionError.ErrorDescriptor{Code: "029", Message: "There can only be one type of reference value, hour (startTime and timeLimit) or amount", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_VACCINATION_SCHEDULE_IN_DB       = definitionError.ErrorDescriptor{Code: "030", Message: "Error when trying to create vaccination schedule in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_VACCINATION_SCHEDULE_IN_DB        = definitionError.ErrorDescriptor{Code: "031", Message: "Vaccination schedule not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_VACCINATION_SCHEDULE_IN_DB       = definitionError.ErrorDescriptor{Code: "032", Message: "Error when trying to update vaccination schedule in database", Level: definitionError.LEVEL_FATAL}
	ERROR_REPEATED_VACCINATION_SCHEDULE           = definitionError.ErrorDescriptor{Code: "033", Message: "The person to be vaccinated has already scheduled the vaccination scheme provided", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_VACCINATION_SCHEDULE_IN_DB       = definitionError.ErrorDescriptor{Code: "034", Message: "Error when trying to delete vaccination schedule in database", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_DOSE_DATE_IN_DB                  = definitionError.ErrorDescriptor{Code: "035", Message: "Error when trying to create dose date in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_DOSE_DATE_IN_DB                   = definitionError.ErrorDescriptor{Code: "036", Message: "Dose date not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_DOSE_DATE_IN_DB                  = definitionError.ErrorDescriptor{Code: "037", Message: "Error when trying to update dose date in database", Level: definitionError.LEVEL_FATAL}
	ERROR_DOSE_ALREADY_APPLIED                    = definitionError.ErrorDescriptor{Code: "038", Message: "The user has already applied the vaccine dose", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_HELP_TOPIC_IN_DB                 = definitionError.ErrorDescriptor{Code: "039", Message: "Error when trying to create help topic in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_HELP_TOPIC_IN_DB                  = definitionError.ErrorDescriptor{Code: "040", Message: "Help topic not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_HELP_TOPIC_IN_DB                 = definitionError.ErrorDescriptor{Code: "041", Message: "Error when trying to update help topic in database", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_HELP_TOPIC_IN_DB                 = definitionError.ErrorDescriptor{Code: "042", Message: "Error when trying to delete help topic in database", Level: definitionError.LEVEL_FATAL}
	ERROR_WORKDAY_NOT_FINISHED                    = definitionError.ErrorDescriptor{Code: "043", Message: "The workday does not even finished", Level: definitionError.LEVEL_FATAL}
	ERROR_WORKDAY_NOT_STARTED                     = definitionError.ErrorDescriptor{Code: "044", Message: "The workday does not even started", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_DEPENDENT_IN_DB                  = definitionError.ErrorDescriptor{Code: "045", Message: "Error when trying to create dependent in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_DEPENDENT_IN_DB                   = definitionError.ErrorDescriptor{Code: "046", Message: "dependent not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_DEPENDENT_IN_DB                  = definitionError.ErrorDescriptor{Code: "047", Message: "Error when trying to update dependent in database", Level: definitionError.LEVEL_FATAL}
	ERROR_THERE_ARE_ALREADY_VACCINATION_SCHEDULES = definitionError.ErrorDescriptor{Code: "048", Message: "Impossible to eliminate the vaccination scheme because there are already vaccination schedules that are based on it", Level: definitionError.LEVEL_FATAL}
	ERROR_PASSWORD_NOT_ENCRYPTED                  = definitionError.ErrorDescriptor{Code: "049", Message: "Failed to generate hashed password", Level: definitionError.LEVEL_FATAL}
	ERROR_CANNOT_COMPARE_PASSWORDS                = definitionError.ErrorDescriptor{Code: "050", Message: "Passwords could not be compared", Level: definitionError.LEVEL_FATAL}
	ERROR_PASSWORD_NOT_MATCH                      = definitionError.ErrorDescriptor{Code: "051", Message: "Password does not match", Level: definitionError.LEVEL_FATAL}
	ERROR_MANY_LOGIN_VALUES                       = definitionError.ErrorDescriptor{Code: "051", Message: "Use email or phone number, not both", Level: definitionError.LEVEL_FATAL}
	ERROR_EMAIL_EXISTS                            = definitionError.ErrorDescriptor{Code: "052", Message: "Email is not available", Level: definitionError.LEVEL_FATAL}
	ERROR_PHONE_NUMBER_EXISTS                     = definitionError.ErrorDescriptor{Code: "053", Message: "Phone number is not available", Level: definitionError.LEVEL_FATAL}
	ERROR_INSERT_VERIFICATION_CODE_IN_DB          = definitionError.ErrorDescriptor{Code: "054", Message: "Error when trying to create verification code in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_VERIFICATION_CODE_IN_DB           = definitionError.ErrorDescriptor{Code: "055", Message: "verification code not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_VERIFICATION_CODE_IN_DB          = definitionError.ErrorDescriptor{Code: "056", Message: "Error when trying to update verification code in database", Level: definitionError.LEVEL_FATAL}
	ERROR_CODE_IS_NOT_EQUAL                       = definitionError.ErrorDescriptor{Code: "057", Message: "Error code is not equal", Level: definitionError.LEVEL_FATAL}
	ERROR_EXPIRED_CODE                            = definitionError.ErrorDescriptor{Code: "058", Message: "Error code is expired", Level: definitionError.LEVEL_FATAL}
	ERROR_PHONE_NUMBER_IS_NOT_VERIFIED            = definitionError.ErrorDescriptor{Code: "059", Message: "User's phone number is not verified", Level: definitionError.LEVEL_FATAL}
	ERROR_USER_IS_DEPENDENT                       = definitionError.ErrorDescriptor{Code: "060", Message: "You cannot configure a dependent user's email, password, or phone number", Level: definitionError.LEVEL_FATAL}
	ERROR_LON_AND_LAT_FORMAT                      = definitionError.ErrorDescriptor{Code: "061", Message: "latitude values range between 90 and -90 (180 degrees), while longitude values range between 180 and -180 (360 degrees). Check if one of these fields meets the above", Level: definitionError.LEVEL_FATAL}
	ERROR_INVALID_DATETIME                        = definitionError.ErrorDescriptor{Code: "062", Message: "invalid datetime format", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_USER_IN_DB                       = definitionError.ErrorDescriptor{Code: "063", Message: "Error when trying to delete user in database", Level: definitionError.LEVEL_FATAL}
	ERROR_FILE_TYPE_BLANK                         = definitionError.ErrorDescriptor{Code: "064", Message: "file type can't be blank", Level: definitionError.LEVEL_FATAL}
	ERROR_DOCUMENT_ID_EXISTS                      = definitionError.ErrorDescriptor{Code: "065", Message: "Identification document is not available", Level: definitionError.LEVEL_FATAL}
	ERROR_UNKNOWN_DEVICE_ID                       = definitionError.ErrorDescriptor{Code: "067", Message: "Unknown user device ID", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_COUNTRY_IN_DB                     = definitionError.ErrorDescriptor{Code: "068", Message: "Country not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_DIVISION_IN_DB                    = definitionError.ErrorDescriptor{Code: "069", Message: "Country division not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_CREATE_COUNTRY_RULE_IN_DB               = definitionError.ErrorDescriptor{Code: "070", Message: "Error when trying to create country rules in database", Level: definitionError.LEVEL_FATAL}
	ERROR_QUERY_COUNTRY_RULE_IN_DB                = definitionError.ErrorDescriptor{Code: "071", Message: "country rules not found in database", Level: definitionError.LEVEL_FATAL}
	ERROR_UPDATE_COUNTRY_RULE_IN_DB               = definitionError.ErrorDescriptor{Code: "072", Message: "Error when trying to update country rules in database", Level: definitionError.LEVEL_FATAL}
	ERROR_DELETE_COUNTRY_RULE_IN_DB               = definitionError.ErrorDescriptor{Code: "073", Message: "Error when trying to delete country rules in database", Level: definitionError.LEVEL_FATAL}
	ERROR_EXISTING_COUNTRY_RULES                  = definitionError.ErrorDescriptor{Code: "074", Message: "The provided country already has rules", Level: definitionError.LEVEL_FATAL}
	ERROR_DOCUMENT_ID_RULE                        = definitionError.ErrorDescriptor{Code: "075", Message: "The identification document is required", Level: definitionError.LEVEL_FATAL}
)
